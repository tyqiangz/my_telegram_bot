name: Formatting python code with yapf

on: [push]

env:
  PYTHON_VERSION: ["3.8", "3.9", "3.10"]
  SAM_TEMPLATE: template.yaml

jobs:
  static:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ${{ env.PYTHON_VERSION }}
    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.head_ref }}
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Run YAPF to test if python code is correctly formatted
      uses: AlexanderMelde/yapf-action@master
      with:
        args: --style pep8 --no-local-style --verbose --recursive --diff --parallel
    - name: Run flake8 to check for static errors
      uses: py-actions/flake8@v2
      with: 
        path: "my_telegram_bot"

  test:
    needs: static
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ${{ env.PYTHON_VERSION }}
    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.head_ref }}
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        # install requirements
        pip install -r ./my_telegram_bot/requirements.txt
        # install dev requirements
        pip install -r ./tests/requirements.txt
    - name: Run unit tests
      run: |
        export BOT_TOKEN=${{ secrets.BOT_TOKEN }}
        pytest ./tests/unit/

  deploy:
    needs: test
    # if: success() && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.head_ref }}
    - name: Install AWS Serverless Application Model (SAM) CLI tool
      uses: aws-actions/setup-sam@v2
      with:
        use-installer: true
    - name: Set AWS CLI credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    - name: Build the AWS SAM application
      run: sam build --template ${SAM_TEMPLATE} --use-container
    - name: Deploy to AWS Lambda
      run: sam deploy